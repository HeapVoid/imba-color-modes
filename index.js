var Z=Symbol.for("#__init__"),H=Symbol.for("#__initor__"),$=Symbol.for("#__inited__"),F=Symbol.for("#__hooks__"),k=Symbol.for("#__patch__"),f=Symbol.for("#has"),p=Symbol.for("#meta"),u=Symbol.for("imba"),b=Symbol.for("#__mixin__"),d=Symbol.for("#matcher"),g=Symbol.for("#L"),n=Symbol.for("#appendChild"),m=Symbol.for("#afterVisit"),r=Symbol.for("#beforeReconcile"),t=Symbol.for("#afterReconcile"),l=Symbol.for("##up");var D={IsExtension:1,IsTag:2,HasDescriptors:4,HasSuperCalls:8,HasConstructor:16,HasFields:32,HasMixins:64,HasInitor:128,HasDecorators:256,IsObjectExtension:512},X=new Map,h=globalThis[u]||={counter:0,classes:X};function A(q,w={}){return X.has(q)||X.set(q,{symbol:Symbol(q.name),parent:Object.getPrototypeOf(q.prototype)?.constructor,for:q,uses:null,inits:null,id:h.counter++,...w}),X.get(q)}function K(q,w){return w?.[f]?.(q)??w?.includes?.(q)??w?.has?.(q)??!1}function _(q,w){if(!q||!w)return!1;if(q.get)return w.get===q.get;if(q.set)return w.set===q.set;if(q.value)return q.value===w.value}function S(q,w,B,E={}){let J=q.constructor;if(!B&&w){if(B=Object.getOwnPropertyDescriptors(w),delete B.constructor,B[Z])console.warn(`Cannot define plain fields when extending class ${J.name}`),delete B[Z]}let P=A(J);if(P&&P.augments){let G=new Map;for(let z of Object.keys(B)){let N=Object.getOwnPropertyDescriptor(q,z);for(let Q of P.augments){let U=G.get(Q);U||G.set(Q,U={});let V=Object.getOwnPropertyDescriptor(Q.prototype,z);if(V&&!_(N,V))console.warn("wont extend",z,V,N);else U[z]=B[z]}}for(let[z,N]of G)if(Object.keys(N).length)S(z.prototype,null,N)}return Object.defineProperties(q,B),q}function C(q,w){let B=A(q),E=A(w);if(E.parent){if(!(q.prototype instanceof E.parent))throw new Error(`Mixin ${w.name} has superclass not present in target class`)}if(!E.augments){E.augments=new Set;let P=E.ref=Symbol(w.name),G=Object[Symbol.hasInstance];w.prototype[P]=!0,Object.defineProperty(w,Symbol.hasInstance,{value:function(z){return this===w?z&&!!z[P]:G.call(this,z)}})}if(q.prototype[E.ref])return q;if(E.uses)for(let P of E.uses)C(q,P);E.augments.add(q),B.uses||=[],B.uses.push(w);let J=Object.getOwnPropertyDescriptors(w.prototype);if(delete J.constructor,J[Z])B.inits||=[],B.inits.push(w.prototype[Z]),delete J[Z];if(Object.defineProperties(q.prototype,J),w?.mixed instanceof Function)w.mixed(q);return q}var W={cache:{},self:null,target:null,proxy:new Proxy({},{apply:(q,w,...B)=>{return W.target[w].apply(W.self,B)},get:(q,w)=>{return Reflect.get(W.target,w,W.self)},set:(q,w,B,E)=>{return Reflect.set(W.target,w,B,W.self)}})};function R(q,w,B,E,J=null){let P=Object.getPrototypeOf(q.prototype),G=E&D.HasMixins,z;if(G)X.set(q,X.get(P.constructor)),P=Object.getPrototypeOf(P);if(J){let Q=E&D.IsObjectExtension?J:J.prototype,U=A(q);if(U.uses){if(J===Q)console.warn("Cannot extend object with mixins");for(let V of U.uses)C(J,V)}if(E&D.HasSuperCalls)W.cache[w]=Object.create(Object.getPrototypeOf(Q),Object.getOwnPropertyDescriptors(Q));return S(Q,q.prototype),J}let N=P?.constructor;if(z=A(q,{symbol:w}),Object.defineProperty(q,p,{value:z,enumerable:!1,configurable:!0}),B&&q.name!==B)Object.defineProperty(q,"name",{value:B,configurable:!0});if(z.flags=E,E&D.HasConstructor)q.prototype[H]=w;if(z.uses)for(let Q of z.uses)Q.mixes?.(q);if(N?.inherited instanceof Function)N.inherited(q);return q}function M(q,w){if(q[H]===w)q[$]?.(),q[F]&&q[F].inited(q)}function T(q,w){return q[q.length+w]}var L=Symbol();class c{constructor(){globalThis.document.documentElement.style.colorScheme=this.active,M(this,L)}get light(){return this.preset=="light"}set light(q){if(q)this.preset="light"}get dark(){return this.preset=="dark"}set dark(q){if(q)this.preset="dark"}get auto(){return this.preset=="system"}set auto(q){if(q)this.preset="system"}get active(){return this.preset=="system"?this.system:window.localStorage.getItem("imba-color-modes")}set active(q){this.preset=q}get system(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}get preset(){let q=window.localStorage.getItem("imba-color-modes");return K(q,["light","dark"])?q:"system"}set preset(q){let w=K(q,["light","dark"])?q:"system";window.localStorage.setItem("imba-color-modes",w),globalThis.document.documentElement.style.colorScheme=this.active}toggle(){if(this.active=="dark")return this.light=!0;else return this.dark=!0}static{R(this,L,"ColorModes",16)}}function v(q){if(q=q.replace(/^#/,""),q.length===3)q=q.split("").map(function(B){return B+B}).join("");let w=parseInt(q,16);return{r:w>>16&255,g:w>>8&255,b:w&255}}function x(q,w,B){let E=function(J){return J.toString(16).padStart(2,"0")};return"#"+E(q)+E(w)+E(B)}function Y(q){return q/=255,q<=0.04045?q/12.92:Math.pow((q+0.055)/1.055,2.4)}function O(q){return q<=0.0031308?12.92*q:1.055*Math.pow(q,0.4166666666666667)-0.055}function j(q,w,B){let E=0.4122214708*q+0.5363325363*w+0.0514459929*B,J=0.2119034982*q+0.6806995451*w+0.1073969566*B,P=0.0883024619*q+0.2817188376*w+0.6299787005*B,G=Math.cbrt(E),z=Math.cbrt(J),N=Math.cbrt(P);return{L:0.2104542553*G+0.793617785*z-0.0040720468*N,a:1.9779984951*G-2.428592205*z+0.4505937099*N,b:0.0259040371*G+0.7827717662*z-0.808675766*N}}function o(q,w,B){let E=q+0.3963377774*w+0.2158037573*B,J=q-0.1055613458*w-0.0638541728*B,P=q-0.0894841775*w-1.291485548*B,G=E**3,z=J**3,N=P**3;return{r:4.0767416621*G-3.3077115913*z+0.2309699292*N,g:-1.2684380046*G+2.6097574011*z-0.3413193965*N,b:-0.0041960863*G-0.7034186147*z+1.707614701*N}}function y(q,w,B){let E=v(q),J=v(B),P={r:Y(E.r),g:Y(E.g),b:Y(E.b)},G={r:Y(J.r),g:Y(J.g),b:Y(J.b)},z=j(P.r,P.g,P.b),N=j(G.r,G.g,G.b),Q=w/100,U={L:z.L*Q+N.L*(1-Q),a:z.a*Q+N.a*(1-Q),b:z.b*Q+N.b*(1-Q)},V=o(U.L,U.a,U.b),I={r:Math.round(Math.min(Math.max(O(V.r),0),1)*255),g:Math.round(Math.min(Math.max(O(V.g),0),1)*255),b:Math.round(Math.min(Math.max(O(V.b),0),1)*255)};return x(I.r,I.g,I.b)}function a(q,w=[],B=[]){var E;if(!w||!w.length||!B||!B.length){console.log("Palletes must contain at least one color");return}if(typeof w[0]!=="string"||typeof T(w,-1)!=="string"||typeof B[0]!=="string"||typeof T(B,-1)!=="string")console.log("Pallete definition should start and end with the color (as a string)");let J=[],P=[];for(let G=w.length,z=0,N=G-z;N>0?z<G:z>G;N>0?z++:z--)if(typeof w[z]==="string")J.push(w[z]);else if(typeof w[z]==="number")for(let Q=w[z],U=1,V=Q-U;V>0?U<=Q:U>=Q;V>0?U++:U--)J.push(y(w[z+1],U*100/(w[z]+1),w[z-1]));else{console.log("Pallete definition could contain only numbers or colors (as string)");return}for(let G=B.length,z=0,N=G-z;N>0?z<G:z>G;N>0?z++:z--)if(typeof B[z]==="string")P.push(B[z]);else if(typeof B[z]==="number")for(let Q=B[z],U=1,V=Q-U;V>0?U<=Q:U>=Q;V>0?U++:U--)P.push(y(B[z+1],U*100/(B[z]+1),B[z-1]));else{console.log("Pallete definition could contain only numbers or colors (as string)");return}if(J.length!=P.length){console.log("Count of colors in dark and light palletes must be equal");return}E=[];for(let G=J.length,z=0,N=G-z;N>0?z<G:z>G;N>0?z++:z--)E.push(globalThis.document.documentElement.style.setProperty("--"+q+z,"light-dark("+J[z]+","+P[z]+")"));return E}export{a as pallete,y as mix,c as ColorModes};
